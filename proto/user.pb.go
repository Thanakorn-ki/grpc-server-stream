// Code generated by protoc-gen-go. DO NOT EDIT.
// source: PATH/user.proto

package user

import (
	context "context"
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	empty "github.com/golang/protobuf/ptypes/empty"
	timestamp "github.com/golang/protobuf/ptypes/timestamp"
	grpc "google.golang.org/grpc"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type UserResponse_PhoneType int32

const (
	UserResponse_MOBILE UserResponse_PhoneType = 0
	UserResponse_HOME   UserResponse_PhoneType = 1
	UserResponse_WORK   UserResponse_PhoneType = 2
)

var UserResponse_PhoneType_name = map[int32]string{
	0: "MOBILE",
	1: "HOME",
	2: "WORK",
}

var UserResponse_PhoneType_value = map[string]int32{
	"MOBILE": 0,
	"HOME":   1,
	"WORK":   2,
}

func (x UserResponse_PhoneType) String() string {
	return proto.EnumName(UserResponse_PhoneType_name, int32(x))
}

func (UserResponse_PhoneType) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_7dad3463ce9e4180, []int{0, 0}
}

type UserResponse struct {
	Name                 string                      `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Id                   int32                       `protobuf:"varint,2,opt,name=id,proto3" json:"id,omitempty"`
	Email                string                      `protobuf:"bytes,3,opt,name=email,proto3" json:"email,omitempty"`
	Phones               []*UserResponse_PhoneNumber `protobuf:"bytes,4,rep,name=phones,proto3" json:"phones,omitempty"`
	LastUpdated          *timestamp.Timestamp        `protobuf:"bytes,5,opt,name=last_updated,json=lastUpdated,proto3" json:"last_updated,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                    `json:"-"`
	XXX_unrecognized     []byte                      `json:"-"`
	XXX_sizecache        int32                       `json:"-"`
}

func (m *UserResponse) Reset()         { *m = UserResponse{} }
func (m *UserResponse) String() string { return proto.CompactTextString(m) }
func (*UserResponse) ProtoMessage()    {}
func (*UserResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_7dad3463ce9e4180, []int{0}
}

func (m *UserResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_UserResponse.Unmarshal(m, b)
}
func (m *UserResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_UserResponse.Marshal(b, m, deterministic)
}
func (m *UserResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_UserResponse.Merge(m, src)
}
func (m *UserResponse) XXX_Size() int {
	return xxx_messageInfo_UserResponse.Size(m)
}
func (m *UserResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_UserResponse.DiscardUnknown(m)
}

var xxx_messageInfo_UserResponse proto.InternalMessageInfo

func (m *UserResponse) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *UserResponse) GetId() int32 {
	if m != nil {
		return m.Id
	}
	return 0
}

func (m *UserResponse) GetEmail() string {
	if m != nil {
		return m.Email
	}
	return ""
}

func (m *UserResponse) GetPhones() []*UserResponse_PhoneNumber {
	if m != nil {
		return m.Phones
	}
	return nil
}

func (m *UserResponse) GetLastUpdated() *timestamp.Timestamp {
	if m != nil {
		return m.LastUpdated
	}
	return nil
}

type UserResponse_PhoneNumber struct {
	Number               string                 `protobuf:"bytes,1,opt,name=number,proto3" json:"number,omitempty"`
	Type                 UserResponse_PhoneType `protobuf:"varint,2,opt,name=type,proto3,enum=user.UserResponse_PhoneType" json:"type,omitempty"`
	XXX_NoUnkeyedLiteral struct{}               `json:"-"`
	XXX_unrecognized     []byte                 `json:"-"`
	XXX_sizecache        int32                  `json:"-"`
}

func (m *UserResponse_PhoneNumber) Reset()         { *m = UserResponse_PhoneNumber{} }
func (m *UserResponse_PhoneNumber) String() string { return proto.CompactTextString(m) }
func (*UserResponse_PhoneNumber) ProtoMessage()    {}
func (*UserResponse_PhoneNumber) Descriptor() ([]byte, []int) {
	return fileDescriptor_7dad3463ce9e4180, []int{0, 0}
}

func (m *UserResponse_PhoneNumber) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_UserResponse_PhoneNumber.Unmarshal(m, b)
}
func (m *UserResponse_PhoneNumber) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_UserResponse_PhoneNumber.Marshal(b, m, deterministic)
}
func (m *UserResponse_PhoneNumber) XXX_Merge(src proto.Message) {
	xxx_messageInfo_UserResponse_PhoneNumber.Merge(m, src)
}
func (m *UserResponse_PhoneNumber) XXX_Size() int {
	return xxx_messageInfo_UserResponse_PhoneNumber.Size(m)
}
func (m *UserResponse_PhoneNumber) XXX_DiscardUnknown() {
	xxx_messageInfo_UserResponse_PhoneNumber.DiscardUnknown(m)
}

var xxx_messageInfo_UserResponse_PhoneNumber proto.InternalMessageInfo

func (m *UserResponse_PhoneNumber) GetNumber() string {
	if m != nil {
		return m.Number
	}
	return ""
}

func (m *UserResponse_PhoneNumber) GetType() UserResponse_PhoneType {
	if m != nil {
		return m.Type
	}
	return UserResponse_MOBILE
}

func init() {
	proto.RegisterEnum("user.UserResponse_PhoneType", UserResponse_PhoneType_name, UserResponse_PhoneType_value)
	proto.RegisterType((*UserResponse)(nil), "user.UserResponse")
	proto.RegisterType((*UserResponse_PhoneNumber)(nil), "user.UserResponse.PhoneNumber")
}

func init() { proto.RegisterFile("PATH/user.proto", fileDescriptor_7dad3463ce9e4180) }

var fileDescriptor_7dad3463ce9e4180 = []byte{
	// 342 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x94, 0x90, 0x4f, 0x4b, 0xeb, 0x40,
	0x14, 0xc5, 0x5f, 0xd2, 0x34, 0xbc, 0xde, 0x94, 0xbe, 0x72, 0x79, 0x94, 0x10, 0x45, 0x43, 0x57,
	0x01, 0x21, 0x2d, 0x51, 0x5c, 0xe9, 0xa2, 0x42, 0xb1, 0xa2, 0xb5, 0x25, 0x6d, 0xe9, 0x52, 0x52,
	0x73, 0xad, 0x81, 0xfc, 0x19, 0x32, 0x13, 0xa1, 0x4b, 0x3f, 0x9c, 0xdf, 0x4b, 0x32, 0x69, 0xa5,
	0x58, 0x5c, 0xb8, 0x3b, 0xf7, 0xce, 0xef, 0x1e, 0xce, 0x19, 0xf8, 0x37, 0x1d, 0xcc, 0x47, 0xbd,
	0x82, 0x53, 0xee, 0xb2, 0x3c, 0x13, 0x19, 0x6a, 0xa5, 0xb6, 0x4e, 0xd7, 0x59, 0xb6, 0x8e, 0xa9,
	0x27, 0x77, 0xab, 0xe2, 0xa5, 0x27, 0xa2, 0x84, 0xb8, 0x08, 0x12, 0x56, 0x61, 0xd6, 0xd1, 0x77,
	0x80, 0x12, 0x26, 0x36, 0xd5, 0x63, 0xf7, 0x43, 0x85, 0xe6, 0x82, 0x53, 0xee, 0x13, 0x67, 0x59,
	0xca, 0x09, 0x11, 0xb4, 0x34, 0x48, 0xc8, 0x54, 0x6c, 0xc5, 0x69, 0xf8, 0x52, 0x63, 0x0b, 0xd4,
	0x28, 0x34, 0x55, 0x5b, 0x71, 0xea, 0xbe, 0x1a, 0x85, 0xf8, 0x1f, 0xea, 0x94, 0x04, 0x51, 0x6c,
	0xd6, 0x24, 0x54, 0x0d, 0x78, 0x09, 0x3a, 0x7b, 0xcd, 0x52, 0xe2, 0xa6, 0x66, 0xd7, 0x1c, 0xc3,
	0x3b, 0x71, 0x65, 0xd6, 0x7d, 0x77, 0x77, 0x5a, 0x02, 0x8f, 0x45, 0xb2, 0xa2, 0xdc, 0xdf, 0xd2,
	0x78, 0x0d, 0xcd, 0x38, 0xe0, 0xe2, 0xa9, 0x60, 0x61, 0x20, 0x28, 0x34, 0xeb, 0xb6, 0xe2, 0x18,
	0x9e, 0xe5, 0x56, 0xb1, 0xdd, 0x5d, 0x6c, 0x77, 0xbe, 0xeb, 0xe5, 0x1b, 0x25, 0xbf, 0xa8, 0x70,
	0x6b, 0x09, 0xc6, 0x9e, 0x2b, 0x76, 0x40, 0x4f, 0xa5, 0xda, 0x36, 0xd8, 0x4e, 0xd8, 0x07, 0x4d,
	0x6c, 0x18, 0xc9, 0x16, 0x2d, 0xef, 0xf8, 0xa7, 0x6c, 0xf3, 0x0d, 0x23, 0x5f, 0x92, 0xdd, 0x33,
	0x68, 0x7c, 0xad, 0x10, 0x40, 0x1f, 0x4f, 0x6e, 0xee, 0x1e, 0x86, 0xed, 0x3f, 0xf8, 0x17, 0xb4,
	0xd1, 0x64, 0x3c, 0x6c, 0x2b, 0xa5, 0x5a, 0x4e, 0xfc, 0xfb, 0xb6, 0xea, 0xbd, 0x2b, 0x60, 0xcc,
	0x28, 0x7f, 0x8b, 0x9e, 0xa9, 0x34, 0xc5, 0x0b, 0xd0, 0x6f, 0x49, 0x0c, 0xe2, 0x18, 0x3b, 0x07,
	0x45, 0x86, 0xe5, 0xff, 0x5b, 0x78, 0x18, 0x01, 0xaf, 0xa0, 0x59, 0x5d, 0xcd, 0x44, 0x4e, 0x41,
	0xf2, 0x9b, 0xdb, 0xbe, 0xb2, 0xd2, 0x25, 0x75, 0xfe, 0x19, 0x00, 0x00, 0xff, 0xff, 0x4a, 0x52,
	0x6b, 0xfd, 0x29, 0x02, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// ServiceUserClient is the client API for ServiceUser service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type ServiceUserClient interface {
	GetAll(ctx context.Context, in *empty.Empty, opts ...grpc.CallOption) (*UserResponse, error)
	GetAllStream(ctx context.Context, in *empty.Empty, opts ...grpc.CallOption) (ServiceUser_GetAllStreamClient, error)
}

type serviceUserClient struct {
	cc *grpc.ClientConn
}

func NewServiceUserClient(cc *grpc.ClientConn) ServiceUserClient {
	return &serviceUserClient{cc}
}

func (c *serviceUserClient) GetAll(ctx context.Context, in *empty.Empty, opts ...grpc.CallOption) (*UserResponse, error) {
	out := new(UserResponse)
	err := c.cc.Invoke(ctx, "/user.ServiceUser/GetAll", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *serviceUserClient) GetAllStream(ctx context.Context, in *empty.Empty, opts ...grpc.CallOption) (ServiceUser_GetAllStreamClient, error) {
	stream, err := c.cc.NewStream(ctx, &_ServiceUser_serviceDesc.Streams[0], "/user.ServiceUser/GetAllStream", opts...)
	if err != nil {
		return nil, err
	}
	x := &serviceUserGetAllStreamClient{stream}
	if err := x.ClientStream.SendMsg(in); err != nil {
		return nil, err
	}
	if err := x.ClientStream.CloseSend(); err != nil {
		return nil, err
	}
	return x, nil
}

type ServiceUser_GetAllStreamClient interface {
	Recv() (*UserResponse, error)
	grpc.ClientStream
}

type serviceUserGetAllStreamClient struct {
	grpc.ClientStream
}

func (x *serviceUserGetAllStreamClient) Recv() (*UserResponse, error) {
	m := new(UserResponse)
	if err := x.ClientStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

// ServiceUserServer is the server API for ServiceUser service.
type ServiceUserServer interface {
	GetAll(context.Context, *empty.Empty) (*UserResponse, error)
	GetAllStream(*empty.Empty, ServiceUser_GetAllStreamServer) error
}

func RegisterServiceUserServer(s *grpc.Server, srv ServiceUserServer) {
	s.RegisterService(&_ServiceUser_serviceDesc, srv)
}

func _ServiceUser_GetAll_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(empty.Empty)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ServiceUserServer).GetAll(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/user.ServiceUser/GetAll",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ServiceUserServer).GetAll(ctx, req.(*empty.Empty))
	}
	return interceptor(ctx, in, info, handler)
}

func _ServiceUser_GetAllStream_Handler(srv interface{}, stream grpc.ServerStream) error {
	m := new(empty.Empty)
	if err := stream.RecvMsg(m); err != nil {
		return err
	}
	return srv.(ServiceUserServer).GetAllStream(m, &serviceUserGetAllStreamServer{stream})
}

type ServiceUser_GetAllStreamServer interface {
	Send(*UserResponse) error
	grpc.ServerStream
}

type serviceUserGetAllStreamServer struct {
	grpc.ServerStream
}

func (x *serviceUserGetAllStreamServer) Send(m *UserResponse) error {
	return x.ServerStream.SendMsg(m)
}

var _ServiceUser_serviceDesc = grpc.ServiceDesc{
	ServiceName: "user.ServiceUser",
	HandlerType: (*ServiceUserServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "GetAll",
			Handler:    _ServiceUser_GetAll_Handler,
		},
	},
	Streams: []grpc.StreamDesc{
		{
			StreamName:    "GetAllStream",
			Handler:       _ServiceUser_GetAllStream_Handler,
			ServerStreams: true,
		},
	},
	Metadata: "PATH/user.proto",
}
